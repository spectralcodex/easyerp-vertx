/*
 * This file is generated by jOOQ.
 */
package jooq;


import java.math.BigDecimal;

import javax.annotation.Generated;

import jooq.routines.Decremental;
import jooq.routines.FnGetNow;
import jooq.routines.HiLo;
import jooq.routines.Incremental;
import jooq.routines.ShowUsers;
import jooq.routines.Square;
import jooq.routines.SumAvg;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Result;


/**
 * Convenience access to all stored procedures and functions in public
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>public.decremental</code>
     */
    public static Long decremental(Configuration configuration, Long val) {
        Decremental f = new Decremental();
        f.setVal(val);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.decremental</code> as a field.
     */
    public static Field<Long> decremental(Long val) {
        Decremental f = new Decremental();
        f.setVal(val);

        return f.asField();
    }

    /**
     * Get <code>public.decremental</code> as a field.
     */
    public static Field<Long> decremental(Field<Long> val) {
        Decremental f = new Decremental();
        f.setVal(val);

        return f.asField();
    }

    /**
     * Call <code>public.fn_get_now</code>
     */
    public static String fnGetNow(Configuration configuration) {
        FnGetNow f = new FnGetNow();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.fn_get_now</code> as a field.
     */
    public static Field<String> fnGetNow() {
        FnGetNow f = new FnGetNow();

        return f.asField();
    }

    /**
     * Call <code>public.hi_lo</code>
     */
    public static HiLo hiLo(Configuration configuration, BigDecimal a, BigDecimal b, BigDecimal c) {
        HiLo p = new HiLo();
        p.setA(a);
        p.setB(b);
        p.setC(c);

        p.execute(configuration);
        return p;
    }

    /**
     * Call <code>public.incremental</code>
     */
    public static Integer incremental(Configuration configuration, Integer val) {
        Incremental f = new Incremental();
        f.setVal(val);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.incremental</code> as a field.
     */
    public static Field<Integer> incremental(Integer val) {
        Incremental f = new Incremental();
        f.setVal(val);

        return f.asField();
    }

    /**
     * Get <code>public.incremental</code> as a field.
     */
    public static Field<Integer> incremental(Field<Integer> val) {
        Incremental f = new Incremental();
        f.setVal(val);

        return f.asField();
    }

    /**
     * Call <code>public.show_users</code>
     */
    public static Result<Record> showUsers(Configuration configuration) {
        ShowUsers f = new ShowUsers();

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.show_users</code> as a field.
     */
    public static Field<Result<Record>> showUsers() {
        ShowUsers f = new ShowUsers();

        return f.asField();
    }

    /**
     * Call <code>public.square</code>
     */
    public static BigDecimal square(Configuration configuration, BigDecimal a) {
        Square p = new Square();
        p.setA(a);

        p.execute(configuration);
        return p.getA();
    }

    /**
     * Call <code>public.sum_avg</code>
     */
    public static SumAvg sumAvg(Configuration configuration, BigDecimal[] list) {
        SumAvg p = new SumAvg();
        p.setList(list);

        p.execute(configuration);
        return p;
    }
}
