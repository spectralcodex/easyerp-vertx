/*
 * This file is generated by jOOQ.
 */
package jooq.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface ITbPropertyAmenity extends VertxPojo, Serializable {

    /**
     * Setter for <code>public.tb_property_amenity.id</code>.
     */
    public ITbPropertyAmenity setId(Long value);

    /**
     * Getter for <code>public.tb_property_amenity.id</code>.
     */
    public Long getId();

    /**
     * Setter for <code>public.tb_property_amenity.serialNumber</code>.
     */
    public ITbPropertyAmenity setSerialnumber(String value);

    /**
     * Getter for <code>public.tb_property_amenity.serialNumber</code>.
     */
    public String getSerialnumber();

    /**
     * Setter for <code>public.tb_property_amenity.amenity</code>.
     */
    public ITbPropertyAmenity setAmenity(String value);

    /**
     * Getter for <code>public.tb_property_amenity.amenity</code>.
     */
    public String getAmenity();

    /**
     * Setter for <code>public.tb_property_amenity.status</code>.
     */
    public ITbPropertyAmenity setStatus(String value);

    /**
     * Getter for <code>public.tb_property_amenity.status</code>.
     */
    public String getStatus();

    /**
     * Setter for <code>public.tb_property_amenity.createdOn</code>.
     */
    public ITbPropertyAmenity setCreatedon(LocalDateTime value);

    /**
     * Getter for <code>public.tb_property_amenity.createdOn</code>.
     */
    public LocalDateTime getCreatedon();

    /**
     * Setter for <code>public.tb_property_amenity.createdBy</code>.
     */
    public ITbPropertyAmenity setCreatedby(String value);

    /**
     * Getter for <code>public.tb_property_amenity.createdBy</code>.
     */
    public String getCreatedby();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface ITbPropertyAmenity
     */
    public void from(ITbPropertyAmenity from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface ITbPropertyAmenity
     */
    public <E extends ITbPropertyAmenity> E into(E into);

    @Override
    public default ITbPropertyAmenity fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setId(json.getLong("id"));
        } catch (ClassCastException e) {
            throw new UnexpectedJsonValueType("id","java.lang.Long",e);
        }
        try {
            setSerialnumber(json.getString("serialNumber"));
        } catch (ClassCastException e) {
            throw new UnexpectedJsonValueType("serialNumber","java.lang.String",e);
        }
        try {
            setAmenity(json.getString("amenity"));
        } catch (ClassCastException e) {
            throw new UnexpectedJsonValueType("amenity","java.lang.String",e);
        }
        try {
            setStatus(json.getString("status"));
        } catch (ClassCastException e) {
            throw new UnexpectedJsonValueType("status","java.lang.String",e);
        }
        try {
            String createdOnString = json.getString("createdOn");
            setCreatedon(createdOnString == null?null: LocalDateTime.parse(createdOnString));
        } catch (ClassCastException e) {
            throw new UnexpectedJsonValueType("createdOn","java.time.LocalDateTime",e);
        }
        try {
            setCreatedby(json.getString("createdBy"));
        } catch (ClassCastException e) {
            throw new UnexpectedJsonValueType("createdBy","java.lang.String",e);
        }
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("serialNumber",getSerialnumber());
        json.put("amenity",getAmenity());
        json.put("status",getStatus());
        json.put("createdOn",getCreatedon()==null?null:getCreatedon().toString());
        json.put("createdBy",getCreatedby());
        return json;
    }

}
