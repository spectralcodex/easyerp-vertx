/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import io.github.jklingsporn.vertx.jooq.shared.async.AbstractAsyncVertxDAO;

import java.time.OffsetDateTime;
import java.util.List;

import javax.annotation.Generated;

import jooq.tables.TbAccomodation;
import jooq.tables.records.TbAccomodationRecord;

import org.jooq.Configuration;


import io.vertx.core.Future;
import io.github.jklingsporn.vertx.jooq.classic.async.AsyncClassicQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbAccomodationDao extends AbstractAsyncVertxDAO<TbAccomodationRecord, jooq.tables.pojos.TbAccomodation, Long, Future<List<jooq.tables.pojos.TbAccomodation>>, Future<jooq.tables.pojos.TbAccomodation>, Future<Integer>, Future<Long>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<TbAccomodationRecord,jooq.tables.pojos.TbAccomodation,Long> {

    /**
     * @param configuration Used for rendering, so only SQLDialect must be set and must be one of the MYSQL types or POSTGRES.
     * @param delegate A configured AsyncSQLClient that is used for query execution
     */
    public TbAccomodationDao(Configuration configuration, io.vertx.ext.asyncsql.AsyncSQLClient delegate) {
        super(TbAccomodation.TB_ACCOMODATION, jooq.tables.pojos.TbAccomodation.class, new AsyncClassicQueryExecutor<TbAccomodationRecord,jooq.tables.pojos.TbAccomodation,Long>(configuration,delegate,jooq.tables.pojos.TbAccomodation::new, TbAccomodation.TB_ACCOMODATION));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(jooq.tables.pojos.TbAccomodation object) {
        return object.getId();
    }

    /**
     * Find records that have <code>serialNumber IN (values)</code> asynchronously
     */
    public Future<List<jooq.tables.pojos.TbAccomodation>> findManyBySerialnumber(List<String> values) {
        return findManyByCondition(TbAccomodation.TB_ACCOMODATION.SERIALNUMBER.in(values));
    }

    /**
     * Find records that have <code>name IN (values)</code> asynchronously
     */
    public Future<List<jooq.tables.pojos.TbAccomodation>> findManyByName(List<String> values) {
        return findManyByCondition(TbAccomodation.TB_ACCOMODATION.NAME.in(values));
    }

    /**
     * Find records that have <code>abbrevation IN (values)</code> asynchronously
     */
    public Future<List<jooq.tables.pojos.TbAccomodation>> findManyByAbbrevation(List<String> values) {
        return findManyByCondition(TbAccomodation.TB_ACCOMODATION.ABBREVATION.in(values));
    }

    /**
     * Find records that have <code>units IN (values)</code> asynchronously
     */
    public Future<List<jooq.tables.pojos.TbAccomodation>> findManyByUnits(List<String> values) {
        return findManyByCondition(TbAccomodation.TB_ACCOMODATION.UNITS.in(values));
    }

    /**
     * Find records that have <code>dormBedsPerRoom IN (values)</code> asynchronously
     */
    public Future<List<jooq.tables.pojos.TbAccomodation>> findManyByDormbedsperroom(List<Integer> values) {
        return findManyByCondition(TbAccomodation.TB_ACCOMODATION.DORMBEDSPERROOM.in(values));
    }

    /**
     * Find records that have <code>totalAccomodation IN (values)</code> asynchronously
     */
    public Future<List<jooq.tables.pojos.TbAccomodation>> findManyByTotalaccomodation(List<Integer> values) {
        return findManyByCondition(TbAccomodation.TB_ACCOMODATION.TOTALACCOMODATION.in(values));
    }

    /**
     * Find records that have <code>createdOn IN (values)</code> asynchronously
     */
    public Future<List<jooq.tables.pojos.TbAccomodation>> findManyByCreatedon(List<OffsetDateTime> values) {
        return findManyByCondition(TbAccomodation.TB_ACCOMODATION.CREATEDON.in(values));
    }

    /**
     * Find records that have <code>createdBy IN (values)</code> asynchronously
     */
    public Future<List<jooq.tables.pojos.TbAccomodation>> findManyByCreatedby(List<String> values) {
        return findManyByCondition(TbAccomodation.TB_ACCOMODATION.CREATEDBY.in(values));
    }

    @Override
    public AsyncClassicQueryExecutor<TbAccomodationRecord,jooq.tables.pojos.TbAccomodation,Long> queryExecutor(){
        return (AsyncClassicQueryExecutor<TbAccomodationRecord,jooq.tables.pojos.TbAccomodation,Long>) super.queryExecutor();
    }

    @Override
    protected java.util.function.Function<Object,Long> keyConverter(){
        return lastId -> Long.valueOf(((io.vertx.core.json.JsonArray)lastId).getLong(0).longValue());
    }
}
