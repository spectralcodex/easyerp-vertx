/*
 * This file is generated by jOOQ.
 */
package jooq;


import javax.annotation.Generated;

import jooq.tables.TbUser;
import jooq.tables.records.TbUserRecord;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TbUserRecord, Long> IDENTITY_TB_USER = Identities0.IDENTITY_TB_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TbUserRecord> TB_USER_PKEY = UniqueKeys0.TB_USER_PKEY;
    public static final UniqueKey<TbUserRecord> TB_USER_EMAIL_KEY = UniqueKeys0.TB_USER_EMAIL_KEY;
    public static final UniqueKey<TbUserRecord> TB_USER_MOBILE_KEY = UniqueKeys0.TB_USER_MOBILE_KEY;
    public static final UniqueKey<TbUserRecord> TB_USER_COMPANYCODE_KEY = UniqueKeys0.TB_USER_COMPANYCODE_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TbUserRecord, Long> IDENTITY_TB_USER = Internal.createIdentity(TbUser.TB_USER, TbUser.TB_USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<TbUserRecord> TB_USER_PKEY = Internal.createUniqueKey(TbUser.TB_USER, "tb_user_pkey", TbUser.TB_USER.ID);
        public static final UniqueKey<TbUserRecord> TB_USER_EMAIL_KEY = Internal.createUniqueKey(TbUser.TB_USER, "tb_user_email_key", TbUser.TB_USER.EMAIL);
        public static final UniqueKey<TbUserRecord> TB_USER_MOBILE_KEY = Internal.createUniqueKey(TbUser.TB_USER, "tb_user_mobile_key", TbUser.TB_USER.MOBILE);
        public static final UniqueKey<TbUserRecord> TB_USER_COMPANYCODE_KEY = Internal.createUniqueKey(TbUser.TB_USER, "tb_user_companyCode_key", TbUser.TB_USER.COMPANYCODE);
    }
}
